// Main component stylesheet

@import '_global.scss';
@import '_print.scss';

//
// Tints
// Provide an overlay over backgrounds to darken, lighten an image to provide
// better visual contrast for content.
// Can be used as extensions on components that accommodate overlaid content.
%tint {
  position: relative;
  overflow: hidden;
}

%tint-overlay {
  content: '';
  height: 100%;
  left: 0;
  opacity: .5;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 1;
}

%tint-content {
  position: relative;
  z-index: 2;
}

// Light tint layer provides a white tint.
%light-tint,
.light-tint {
  @extend %tint;
  &::before {
      @extend %tint-overlay;
      background: #fff;
  }
}

// Dark tint layer provides a black tint.
%dark-tint,
.dark-tint {
  @extend %tint;
  background-color: $dark-tint-bg;
  &::before {
      @extend %tint-overlay;
      background: #000;
  }
}

// Palettes are colour groups to change all the colours within that wrapper to a specific set.
//
// Components that set their own element colours may need palette @extend added to them to override specificity. e.g.
// &.light-palette {
//   a {
//     @extend %light-palette;
//   }
// }
//

// Light
%light-palette,
.light-palette {
  border-color: $light-palette-border-color;
  color: $light-palette-color;

  a {
    color: $light-palette-link-color;
    font-weight: 400;

    &:hover {
      color: darken($light-palette-link-color,10%);
    }
  }
}

%light-palette-bg,
.light-palette-bg {
  background-color: $light-palette-bg;
}

// Dark
%dark-palette,
.dark-palette {
  border-color: $dark-palette-border-color;
  color: $dark-palette-color;

  a {
    color: $dark-palette-link-color;

    &:hover {
      color: darken($dark-palette-link-color,10%);
    }
  }
}

%dark-palette-bg,
.dark-palette-bg {
  background-color: $dark-palette-bg;
}

.uq-logo {
  @include hide-text;
  background: url('https://static.uq.net.au/v5/logos/corporate/uq-logo-white.png') no-repeat 0 0; // sass-lint:disable-line no-url-domains, no-url-protocols
  background: url('https://static.uq.net.au/v5/logos/corporate/uq-logo-white.svg') no-repeat 0 0; // sass-lint:disable-line no-url-domains, no-url-protocols, no-duplicate-properties
  background-size: 100%;
  color: $logo-color;
  display: block;
  height: 36px;
  margin: 0;
  padding: 0;
  width: 126px;

  @media #{$medium-up} {
    height: 43px;
    width: 150px;
  }

  @media #{$large-up} {
    height: 51px;
    width: 178px;
  }
}

// Enable Zurb Foundation Responsive Text alignment
@include align-classes;

// Background patterns and textures for use on sections to create visual difference.

.pattern {
  &--noise {
    background-image: url("#{$uq-bg-image-path}/pattern-noise.png");
    background-repeat: repeat;
  }

  &--black-pinstripe {
    background: #161616 url("#{$uq-bg-image-path}/pattern-black-pinstripe.gif") repeat 0 0;
  }

  &--cardboard {
    background: #f6f6f6 url("#{$uq-bg-image-path}/pattern-cardboard.jpg") repeat 0 0;
  }

  &--mesh {
    background: #fafafa url("#{$uq-bg-image-path}/pattern-mesh.gif") repeat 0 0;
  }

  &--dark-grid {
    background: #1d1d1d url("#{$uq-bg-image-path}/pattern-dark-grid.png") repeat 50% 50%;
  }

  &--thatched {
    background: #f8f8f8 url("#{$uq-bg-image-path}/pattern-thatched.png") repeat 0 0;
  }

  &--light-grid {
    background: #e2e2e2 url("#{$uq-bg-image-path}/pattern-light-grid.png") repeat 50% 50%;
  }
}

//
// Icons
// Custom and contrib icon sets
//

// Create icon font stack to allow multiple sets to use the same prefix class
// Remove if prefix classes are different.
// Fallback to Roboto for when the icon class is applied directly to an element containing other text.
.#{$fa-css-prefix},
.#{$uq-css-prefix} {
  font-family: uq-icons, FontAwesome, $roboto !important; // shortening font declaration
  font-style: normal;
  font-weight: inherit;
}

// Allow icons to be applied on buttons etc and not touch the text inside that element.
.icon {
  &:hover {
    text-decoration: none;
  }

  &--prefix {
    &::before {
      margin-right: .7rem;
    }
  }

  &--suffix {
    &::before {
      float: right;
      margin-left: .7rem;
      margin-top: .15rem;
    }
  }

  // Allow the icon to be a different colour to parent.
  &--light-grey,
  &--light-gray {
    &::before {
      color: $icon-light-grey-color;
    }
  }
}
